plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.1'
  id 'io.spring.dependency-management' version '1.1.7'
}

// 변수명 관리
ext {
  set('springCloudVersion', "2024.0.0")
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management'

  group = 'com.library'
  version = '0.0.1-SNAPSHOT'

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(21)
    }
  }

  configurations {
    compileOnly {
      extendsFrom annotationProcessor
    }
  }

  repositories {
    mavenCentral()
  }

  /**
   * #### dependencyManagement 태그 : 프로젝트에서 사용되는 의존성들의 버전을 관리 ####
   * Bom (Bill of Materials)
   * 프로젝트에서 사용되는 의존성을 추가한 특정 라이브러리의 모든 하위 라이브러리 버전을 일관되게 맞춰줌 (하위 모듈에도 적용)
   */
  dependencyManagement {
    imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
  }

  /**
   * #### dependencies 태그 : 프로젝트에서 실제로 사용될 의존성을 선언하고 스코프를 지정 ####
   * api 키워드: 해당 모듈을 의존하는 다른 모듈도 사용 가능 (재사용성이 높아지지만, 모듈간의 결합도가 강해짐)
   * implementation 키워드: 내부에서만 사용 (모듈간의 결합도를 낮춰서 캡슐화가 유지됨)
   */
  dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  }

  tasks.named('test') {
    useJUnitPlatform()
  }

  // jar 기본값: false (필요한 것만 true 할 것)
  bootJar.enabled = false
  jar.enabled = false
}